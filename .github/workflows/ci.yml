name: Python Continuous Integration
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PYTHON_VERSION: 3.10.11
  AZURE_RESOURCE_GROUP_NAME: "azure-ml-yola"
  AZURE_SUBSCRIPTION_ID: "9d42c9d4-85ab-429d-afb4-4d77f309078c"
  AZURE_LOCATION: "northeurope"
  AZURE_ML_WORKSPACE_NAME: "cats-dogs-yola"

permissions:
  contents: write
jobs:

  train_unit_tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --user poetry
    - name: Run unit tests Packages Extraction
      working-directory: train/extraction
      run: |
        poetry install
        poetry run coverage run -m unittest tests.extraction_tests
        poetry run coverage report
  train:
    runs-on: ubuntu-latest
    needs: train_unit_tests
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --user poetry
        chmod +x ./Makefile
        ./Makefile
    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
    - name: Run Train Pipeline
      run: |
          az extension add -n ml
          az group create --name ${{ env.AZURE_RESOURCE_GROUP_NAME }} --location ${{ env.AZURE_LOCATION }}
          az ml workspace create -n ${{ env.AZURE_ML_WORKSPACE_NAME }} -g ${{ env.AZURE_RESOURCE_GROUP_NAME }} 
          cwd=$(pwd)
          cd ./extraction
          chmod +x ./init_dataset.sh 
          ./init_dataset.sh ${{ env.AZURE_RESOURCE_GROUP_NAME }} ${{ env.AZURE_ML_WORKSPACE_NAME }} 
          cd $cwd
          poetry run python azureml_run_pipeline.py \
            --subscription_id ${{ env.AZURE_SUBSCRIPTION_ID }}  \
            --resource_group_name ${{ env.AZURE_RESOURCE_GROUP_NAME }} \
            --workspace_name ${{ env.AZURE_ML_WORKSPACE_NAME }}
            --location ${{ env.AZURE_LOCATION }}
      working-directory: train